<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.oversky.dreamland.dao.server.ServerPlayerEquipDao">
    <resultMap id="BaseResultMap" type="org.oversky.dreamland.entity.server.ServerPlayerEquip">
        <id column="peid" jdbcType="DECIMAL" property="peid" />
        <result column="serverid" jdbcType="VARCHAR" property="serverid" />
        <result column="custno" jdbcType="DECIMAL" property="custno" />
        <result column="equipid" jdbcType="DECIMAL" property="equipid" />
        <result column="actorid" jdbcType="DECIMAL" property="actorid" />
        <result column="equiplevel" jdbcType="INTEGER" property="equiplevel" />
        <result column="proficiency" jdbcType="INTEGER" property="proficiency" />
    </resultMap>

    <insert id="insert" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip" useGeneratedKeys="true" keyProperty="peid">
        insert into server_player_equip (serverid, custno, equipid, actorid, equiplevel, proficiency)
        values (#{serverid, jdbcType=VARCHAR}, #{custno, jdbcType=DECIMAL}, #{equipid, jdbcType=DECIMAL}, #{actorid, jdbcType=DECIMAL}, #{equiplevel, jdbcType=INTEGER}, #{proficiency, jdbcType=INTEGER})
    </insert>
  
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="peid">
		insert into server_player_equip (serverid, custno, equipid, actorid, equiplevel, proficiency)
		values 
		<foreach item="item" index="index" collection="list" separator=",">
        (#{item.serverid, jdbcType=VARCHAR}, #{item.custno, jdbcType=DECIMAL}, #{item.equipid, jdbcType=DECIMAL}, #{item.actorid, jdbcType=DECIMAL}, #{item.equiplevel, jdbcType=INTEGER}, #{item.proficiency, jdbcType=INTEGER})
		</foreach>
	</insert>
	
    <select id="selectWhere" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_equip 
          <include refid="where_all_list" />
          <include refid="orderby_list" />
    </select>

    <delete id="deleteWhere" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip">
        delete from server_player_equip 
          <include refid="where_all_list" />
    </delete>

	<select id="count" resultType="int" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip">
        select count(1) from server_player_equip <include refid="where_all_list" />
	</select>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_equip
          <include refid="orderby_list" />
    </select>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_equip
         where peid = #{param1}
    </select>

    <delete id="deleteById">
        delete from server_player_equip
         where peid = #{param1}
    </delete>
  
    <update id="updateById" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip">
        update server_player_equip set 
               serverid = #{serverid, jdbcType=VARCHAR}, 
               custno = #{custno, jdbcType=DECIMAL}, 
               equipid = #{equipid, jdbcType=DECIMAL}, 
               actorid = #{actorid, jdbcType=DECIMAL}, 
               equiplevel = #{equiplevel, jdbcType=INTEGER}, 
               proficiency = #{proficiency, jdbcType=INTEGER}
		where peid = #{peid, jdbcType=DECIMAL}
    </update>

	<update id="dynamicUpdateById" parameterType="org.oversky.dreamland.entity.server.ServerPlayerEquip">
		update server_player_equip
		<set>
		    <if test="serverid != null">
				serverid = #{serverid, jdbcType=VARCHAR},
		    </if>
		    <if test="custno != null">
				custno = #{custno, jdbcType=DECIMAL},
		    </if>
		    <if test="equipid != null">
				equipid = #{equipid, jdbcType=DECIMAL},
		    </if>
		    <if test="actorid != null">
				actorid = #{actorid, jdbcType=DECIMAL},
		    </if>
		    <if test="equiplevel != null">
				equiplevel = #{equiplevel, jdbcType=INTEGER},
		    </if>
		    <if test="proficiency != null">
				proficiency = #{proficiency, jdbcType=INTEGER},
		    </if>
		</set>
		where peid = #{peid, jdbcType=DECIMAL}
	</update>

	<update id="dynamicUpdateWhere" parameterType="map">
		update server_player_equip
		<set>
		    <if test="field.serverid != null and field.serverid != ''">
				serverid = #{field.serverid, jdbcType=VARCHAR},
		    </if>
		    <if test="field.custno != null">
				custno = #{field.custno, jdbcType=DECIMAL},
		    </if>
		    <if test="field.equipid != null">
				equipid = #{field.equipid, jdbcType=DECIMAL},
		    </if>
		    <if test="field.actorid != null">
				actorid = #{field.actorid, jdbcType=DECIMAL},
		    </if>
		    <if test="field.equiplevel != null">
				equiplevel = #{field.equiplevel, jdbcType=INTEGER},
		    </if>
		    <if test="field.proficiency != null">
				proficiency = #{field.proficiency, jdbcType=INTEGER},
		    </if>
		</set>
        <include refid="where_all_list_criteria" />
	</update>

	<update id="updateBatch" parameterType="java.util.List">
	    update server_player_equip
	    <trim prefix="set" suffixOverrides=",">	
	        <trim prefix="serverid = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.serverid != null">
	                    when peid = #{item.peid} then #{item.serverid, jdbcType=VARCHAR}
	                </if>
	                <if test="item.serverid == null">
	                    when peid = #{item.peid} then serverid
	                </if>
	            </foreach>
	        </trim>
	        <trim prefix="custno = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.custno != null">
	                    when peid = #{item.peid} then #{item.custno, jdbcType=DECIMAL}
	                </if>
	                <if test="item.custno == null">
	                    when peid = #{item.peid} then custno
	                </if>
	            </foreach>
	        </trim>
	        <trim prefix="equipid = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.equipid != null">
	                    when peid = #{item.peid} then #{item.equipid, jdbcType=DECIMAL}
	                </if>
	                <if test="item.equipid == null">
	                    when peid = #{item.peid} then equipid
	                </if>
	            </foreach>
	        </trim>
	        <trim prefix="actorid = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.actorid != null">
	                    when peid = #{item.peid} then #{item.actorid, jdbcType=DECIMAL}
	                </if>
	                <if test="item.actorid == null">
	                    when peid = #{item.peid} then actorid
	                </if>
	            </foreach>
	        </trim>
	        <trim prefix="equiplevel = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.equiplevel != null">
	                    when peid = #{item.peid} then #{item.equiplevel, jdbcType=INTEGER}
	                </if>
	                <if test="item.equiplevel == null">
	                    when peid = #{item.peid} then equiplevel
	                </if>
	            </foreach>
	        </trim>
	        <trim prefix="proficiency = case" suffix="end,">
	            <foreach collection="list" item="item" index="index">
	                <if test="item.proficiency != null">
	                    when peid = #{item.peid} then #{item.proficiency, jdbcType=INTEGER}
	                </if>
	                <if test="item.proficiency == null">
	                    when peid = #{item.peid} then proficiency
	                </if>
	            </foreach>
	        </trim>
	    </trim>
	    where peid in
	    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
	        #{item.peid}
	    </foreach>
	</update>
	
	<delete id="deleteBatch">
	    delete from server_player_equip
	     where peid in
	    <foreach collection="array" item="id" separator="," open="(" close=")">
	        #{id}
	    </foreach>
	</delete>

	<sql id="column_list">
        ${tab}peid, ${tab}serverid, ${tab}custno, ${tab}equipid, ${tab}actorid, ${tab}equiplevel, ${tab}proficiency
	</sql>
	
	<sql id="where_all_list">
		<where>
			<if test="peid != null">
				and peid = #{peid, jdbcType=DECIMAL}
			</if>
			<if test="serverid != null and serverid != ''">
				and serverid = #{serverid, jdbcType=VARCHAR}
			</if>
			<if test="custno != null">
				and custno = #{custno, jdbcType=DECIMAL}
			</if>
			<if test="equipid != null">
				and equipid = #{equipid, jdbcType=DECIMAL}
			</if>
			<if test="actorid != null">
				and actorid = #{actorid, jdbcType=DECIMAL}
			</if>
			<if test="equiplevel != null">
				and equiplevel = #{equiplevel, jdbcType=INTEGER}
			</if>
			<if test="proficiency != null">
				and proficiency = #{proficiency, jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<sql id="where_all_list_criteria">
		<where>
			<if test="condition.peid != null">
				and peid = #{condition.peid, jdbcType=DECIMAL}
			</if>
			<if test="condition.serverid != null and condition.serverid != ''">
				and serverid = #{condition.serverid, jdbcType=VARCHAR}
			</if>
			<if test="condition.custno != null">
				and custno = #{condition.custno, jdbcType=DECIMAL}
			</if>
			<if test="condition.equipid != null">
				and equipid = #{condition.equipid, jdbcType=DECIMAL}
			</if>
			<if test="condition.actorid != null">
				and actorid = #{condition.actorid, jdbcType=DECIMAL}
			</if>
			<if test="condition.equiplevel != null">
				and equiplevel = #{condition.equiplevel, jdbcType=INTEGER}
			</if>
			<if test="condition.proficiency != null">
				and proficiency = #{condition.proficiency, jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<sql id="orderby_list">
        <if test="orderByClause != null and orderByClause != ''">
            order by ${orderByClause}
        </if>
	</sql>
</mapper>
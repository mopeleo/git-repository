<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.oversky.dreamland.dao.server.ServerPlayerActorDao">
    <resultMap id="BaseResultMap" type="org.oversky.dreamland.entity.server.ServerPlayerActor">
        <id column="serverid" jdbcType="VARCHAR" property="serverid" />
        <id column="custno" jdbcType="DECIMAL" property="custno" />
        <id column="actorid" jdbcType="VARCHAR" property="actorid" />
        <result column="paid" jdbcType="DECIMAL" property="paid" />
        <result column="grade" jdbcType="INTEGER" property="grade" />
        <result column="actorlevel" jdbcType="INTEGER" property="actorlevel" />
        <result column="ratiostr" jdbcType="DOUBLE" property="ratiostr" />
        <result column="ratioint" jdbcType="DOUBLE" property="ratioint" />
        <result column="ratiohp" jdbcType="DOUBLE" property="ratiohp" />
        <result column="ratiomp" jdbcType="DOUBLE" property="ratiomp" />
        <result column="ratioagl" jdbcType="DOUBLE" property="ratioagl" />
        <result column="ratioluck" jdbcType="DOUBLE" property="ratioluck" />
    </resultMap>

    <insert id="insert" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor">
        insert into server_player_actor (<include refid="column_list"><property name="tab" value=""/></include>)
        values (#{paid, jdbcType=DECIMAL}, #{serverid, jdbcType=VARCHAR}, #{custno, jdbcType=DECIMAL}, #{actorid, jdbcType=VARCHAR}, #{grade, jdbcType=INTEGER}, #{actorlevel, jdbcType=INTEGER}, #{ratiostr, jdbcType=DOUBLE}, #{ratioint, jdbcType=DOUBLE}, #{ratiohp, jdbcType=DOUBLE}, #{ratiomp, jdbcType=DOUBLE}, #{ratioagl, jdbcType=DOUBLE}, #{ratioluck, jdbcType=DOUBLE})
    </insert>
  
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="false">
		insert into server_player_actor (<include refid="column_list"><property name="tab" value=""/></include>) 
		values 
		<foreach item="item" index="index" collection="list" separator=",">
		(#{item.paid, jdbcType=DECIMAL}, #{item.serverid, jdbcType=VARCHAR}, #{item.custno, jdbcType=DECIMAL}, #{item.actorid, jdbcType=VARCHAR}, #{item.grade, jdbcType=INTEGER}, #{item.actorlevel, jdbcType=INTEGER}, #{item.ratiostr, jdbcType=DOUBLE}, #{item.ratioint, jdbcType=DOUBLE}, #{item.ratiohp, jdbcType=DOUBLE}, #{item.ratiomp, jdbcType=DOUBLE}, #{item.ratioagl, jdbcType=DOUBLE}, #{item.ratioluck, jdbcType=DOUBLE})
		</foreach>
	</insert>
	
    <select id="selectWhere" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_actor 
          <include refid="where_all_list" />
          <include refid="orderby_list" />
    </select>

    <delete id="deleteWhere" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor">
        delete from server_player_actor 
          <include refid="where_all_list" />
    </delete>

	<select id="count" resultType="int" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor">
        select count(1) from server_player_actor <include refid="where_all_list" />
	</select>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_actor
          <include refid="orderby_list" />
    </select>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from server_player_actor
         where serverid = #{param1} and custno = #{param2} and actorid = #{param3}
    </select>

    <delete id="deleteById">
        delete from server_player_actor
         where serverid = #{param1} and custno = #{param2} and actorid = #{param3}
    </delete>
  
    <update id="updateById" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor">
        update server_player_actor set 
               paid = #{paid, jdbcType=DECIMAL}, 
               grade = #{grade, jdbcType=INTEGER}, 
               actorlevel = #{actorlevel, jdbcType=INTEGER}, 
               ratiostr = #{ratiostr, jdbcType=DOUBLE}, 
               ratioint = #{ratioint, jdbcType=DOUBLE}, 
               ratiohp = #{ratiohp, jdbcType=DOUBLE}, 
               ratiomp = #{ratiomp, jdbcType=DOUBLE}, 
               ratioagl = #{ratioagl, jdbcType=DOUBLE}, 
               ratioluck = #{ratioluck, jdbcType=DOUBLE}
		where serverid = #{serverid, jdbcType=VARCHAR} and custno = #{custno, jdbcType=DECIMAL} and actorid = #{actorid, jdbcType=VARCHAR}
    </update>

	<update id="dynamicUpdateById" parameterType="org.oversky.dreamland.entity.server.ServerPlayerActor">
		update server_player_actor
		<set>
		    <if test="paid != null">
				paid = #{paid, jdbcType=DECIMAL},
		    </if>
		    <if test="grade != null">
				grade = #{grade, jdbcType=INTEGER},
		    </if>
		    <if test="actorlevel != null">
				actorlevel = #{actorlevel, jdbcType=INTEGER},
		    </if>
		    <if test="ratiostr != null">
				ratiostr = #{ratiostr, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioint != null">
				ratioint = #{ratioint, jdbcType=DOUBLE},
		    </if>
		    <if test="ratiohp != null">
				ratiohp = #{ratiohp, jdbcType=DOUBLE},
		    </if>
		    <if test="ratiomp != null">
				ratiomp = #{ratiomp, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioagl != null">
				ratioagl = #{ratioagl, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioluck != null">
				ratioluck = #{ratioluck, jdbcType=DOUBLE},
		    </if>
		</set>
		where serverid = #{serverid, jdbcType=VARCHAR} and custno = #{custno, jdbcType=DECIMAL} and actorid = #{actorid, jdbcType=VARCHAR}
	</update>

	<update id="dynamicUpdateWhere" parameterType="map">
		update server_player_actor
		<set>
		    <if test="field.paid != null">
				paid = #{field.paid, jdbcType=DECIMAL},
		    </if>
		    <if test="field.grade != null">
				grade = #{field.grade, jdbcType=INTEGER},
		    </if>
		    <if test="field.actorlevel != null">
				actorlevel = #{field.actorlevel, jdbcType=INTEGER},
		    </if>
		    <if test="field.ratiostr != null">
				ratiostr = #{field.ratiostr, jdbcType=DOUBLE},
		    </if>
		    <if test="field.ratioint != null">
				ratioint = #{field.ratioint, jdbcType=DOUBLE},
		    </if>
		    <if test="field.ratiohp != null">
				ratiohp = #{field.ratiohp, jdbcType=DOUBLE},
		    </if>
		    <if test="field.ratiomp != null">
				ratiomp = #{field.ratiomp, jdbcType=DOUBLE},
		    </if>
		    <if test="field.ratioagl != null">
				ratioagl = #{field.ratioagl, jdbcType=DOUBLE},
		    </if>
		    <if test="field.ratioluck != null">
				ratioluck = #{field.ratioluck, jdbcType=DOUBLE},
		    </if>
		</set>
        <include refid="where_all_list_criteria" />
	</update>


	<sql id="column_list">
        ${tab}paid, ${tab}serverid, ${tab}custno, ${tab}actorid, ${tab}grade, ${tab}actorlevel, ${tab}ratiostr, ${tab}ratioint, ${tab}ratiohp, ${tab}ratiomp, ${tab}ratioagl, ${tab}ratioluck
	</sql>
	
	<sql id="where_all_list">
		<where>
			<if test="paid != null">
				and paid = #{paid, jdbcType=DECIMAL}
			</if>
			<if test="serverid != null and serverid != ''">
				and serverid = #{serverid, jdbcType=VARCHAR}
			</if>
			<if test="custno != null">
				and custno = #{custno, jdbcType=DECIMAL}
			</if>
			<if test="actorid != null and actorid != ''">
				and actorid = #{actorid, jdbcType=VARCHAR}
			</if>
			<if test="grade != null">
				and grade = #{grade, jdbcType=INTEGER}
			</if>
			<if test="actorlevel != null">
				and actorlevel = #{actorlevel, jdbcType=INTEGER}
			</if>
			<if test="ratiostr != null">
				and ratiostr = #{ratiostr, jdbcType=DOUBLE}
			</if>
			<if test="ratioint != null">
				and ratioint = #{ratioint, jdbcType=DOUBLE}
			</if>
			<if test="ratiohp != null">
				and ratiohp = #{ratiohp, jdbcType=DOUBLE}
			</if>
			<if test="ratiomp != null">
				and ratiomp = #{ratiomp, jdbcType=DOUBLE}
			</if>
			<if test="ratioagl != null">
				and ratioagl = #{ratioagl, jdbcType=DOUBLE}
			</if>
			<if test="ratioluck != null">
				and ratioluck = #{ratioluck, jdbcType=DOUBLE}
			</if>
		</where>
	</sql>

	<sql id="where_all_list_criteria">
		<where>
			<if test="condition.paid != null">
				and paid = #{condition.paid, jdbcType=DECIMAL}
			</if>
			<if test="condition.serverid != null and condition.serverid != ''">
				and serverid = #{condition.serverid, jdbcType=VARCHAR}
			</if>
			<if test="condition.custno != null">
				and custno = #{condition.custno, jdbcType=DECIMAL}
			</if>
			<if test="condition.actorid != null and condition.actorid != ''">
				and actorid = #{condition.actorid, jdbcType=VARCHAR}
			</if>
			<if test="condition.grade != null">
				and grade = #{condition.grade, jdbcType=INTEGER}
			</if>
			<if test="condition.actorlevel != null">
				and actorlevel = #{condition.actorlevel, jdbcType=INTEGER}
			</if>
			<if test="condition.ratiostr != null">
				and ratiostr = #{condition.ratiostr, jdbcType=DOUBLE}
			</if>
			<if test="condition.ratioint != null">
				and ratioint = #{condition.ratioint, jdbcType=DOUBLE}
			</if>
			<if test="condition.ratiohp != null">
				and ratiohp = #{condition.ratiohp, jdbcType=DOUBLE}
			</if>
			<if test="condition.ratiomp != null">
				and ratiomp = #{condition.ratiomp, jdbcType=DOUBLE}
			</if>
			<if test="condition.ratioagl != null">
				and ratioagl = #{condition.ratioagl, jdbcType=DOUBLE}
			</if>
			<if test="condition.ratioluck != null">
				and ratioluck = #{condition.ratioluck, jdbcType=DOUBLE}
			</if>
		</where>
	</sql>

	<sql id="orderby_list">
        <if test="orderByClause != null and orderByClause != ''">
            order by ${orderByClause}
        </if>
	</sql>
</mapper>
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
error_log  logs/error.log  debug;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
	# spring-gateawy
	upstream spring-gateway  {
		server 127.0.0.1:5001; 
	}
	
	# gurms-system
	upstream gurms-system  {
		server 127.0.0.1:6000; 
	}
	
    include       mime.types;
    default_type  application/octet-stream;
    
    gzip on;
	gzip_min_length 1k;
	gzip_buffers 16 64k;
	gzip_http_version 1.1;
	gzip_comp_level 6;
	gzip_types text/css text/plain application/x-javascript application/json application/xml;
	gzip_vary on;

    client_max_body_size 10M;
    client_body_buffer_size 128k;    

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

	server {
		listen       8888;
		server_name  127.0.0.1;
		keepalive_requests 120; #单连接请求上限次数
		
		# 正则匹配 location ~ URI {}: ~匹配的文件是区分字符大小写的, location ~* URI {}: ~*匹配的文件是不区分字符大小的
		# 配置Nginx动静分离，定义的静态页面直接从vue项目读取
		location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|woff2|ttf)$ 
        { 
			root         D:/Git/OverSky/project-gurms/gurms-vue/dist;
			index		 index.html index.htm;
			#expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
			expires      15d; 
        }    

		location / {
			proxy_pass  http://spring-gateway;
			# proxy_pass  http://gurms-system;
			# try_files   $uri $uri/ /index.html;  #服务器找不到相关资源的时候，最后就会返回你这个项目中的index.html
		}
		
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

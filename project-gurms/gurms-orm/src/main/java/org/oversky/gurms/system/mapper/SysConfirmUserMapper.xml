<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.oversky.gurms.system.dao.SysConfirmUserDao">
    <resultMap id="BaseResultMap" type="org.oversky.gurms.system.entity.SysConfirmUser">
        <id column="userid" jdbcType="DECIMAL" property="userid" />
        <id column="confirmid" jdbcType="INTEGER" property="confirmid" />
        <result column="checklevel" jdbcType="INTEGER" property="checklevel" />
    </resultMap>

    <insert id="insert" parameterType="org.oversky.gurms.system.entity.SysConfirmUser">
        insert into sys_confirm_user (<include refid="column_list"><property name="tab" value=""/></include>)
        values (#{userid, jdbcType=DECIMAL}, #{confirmid, jdbcType=INTEGER}, #{checklevel, jdbcType=INTEGER})
    </insert>
  
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="false">
		insert into sys_confirm_user (<include refid="column_list"><property name="tab" value=""/></include>) 
		values 
		<foreach item="item" index="index" collection="list" separator=",">
		(#{item.userid, jdbcType=DECIMAL}, #{item.confirmid, jdbcType=INTEGER}, #{item.checklevel, jdbcType=INTEGER})
		</foreach>
	</insert>
	
    <select id="selectWhere" parameterType="org.oversky.gurms.system.entity.SysConfirmUser" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from sys_confirm_user 
          <include refid="where_all_list" />
          <include refid="orderby_list" />
    </select>

    <delete id="deleteWhere" parameterType="org.oversky.gurms.system.entity.SysConfirmUser">
        delete from sys_confirm_user 
          <include refid="where_all_list" />
    </delete>

	<select id="count" resultType="int" parameterType="org.oversky.gurms.system.entity.SysConfirmUser">
        select count(1) from sys_confirm_user <include refid="where_all_list" />
	</select>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from sys_confirm_user
          <include refid="orderby_list" />
    </select>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="column_list"><property name="tab" value=""/></include>
          from sys_confirm_user
         where userid = #{param1} and confirmid = #{param2}
    </select>

    <delete id="deleteById">
        delete from sys_confirm_user
         where userid = #{param1} and confirmid = #{param2}
    </delete>
  
    <update id="updateById" parameterType="org.oversky.gurms.system.entity.SysConfirmUser">
        update sys_confirm_user set 
               checklevel = #{checklevel, jdbcType=INTEGER}
		where userid = #{userid, jdbcType=DECIMAL} and confirmid = #{confirmid, jdbcType=INTEGER}
    </update>

	<update id="dynamicUpdateById" parameterType="org.oversky.gurms.system.entity.SysConfirmUser">
		update sys_confirm_user
		<set>
		    <if test="checklevel != null">
				checklevel = #{checklevel, jdbcType=INTEGER},
		    </if>
		</set>
		where userid = #{userid, jdbcType=DECIMAL} and confirmid = #{confirmid, jdbcType=INTEGER}
	</update>

	<update id="dynamicUpdateWhere" parameterType="map">
		update sys_confirm_user
		<set>
		    <if test="field.checklevel != null">
				checklevel = #{field.checklevel, jdbcType=INTEGER},
		    </if>
		</set>
        <include refid="where_all_list_criteria" />
	</update>


	<sql id="column_list">
        ${tab}userid, ${tab}confirmid, ${tab}checklevel
	</sql>
	
	<sql id="where_all_list">
		<where>
			<if test="userid != null">
				and userid = #{userid, jdbcType=DECIMAL}
			</if>
			<if test="confirmid != null">
				and confirmid = #{confirmid, jdbcType=INTEGER}
			</if>
			<if test="checklevel != null">
				and checklevel = #{checklevel, jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<sql id="where_all_list_criteria">
		<where>
			<if test="condition.userid != null">
				and userid = #{condition.userid, jdbcType=DECIMAL}
			</if>
			<if test="condition.confirmid != null">
				and confirmid = #{condition.confirmid, jdbcType=INTEGER}
			</if>
			<if test="condition.checklevel != null">
				and checklevel = #{condition.checklevel, jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<sql id="orderby_list">
        <if test="orderByClause != null and orderByClause != ''">
            order by ${orderByClause}
        </if>
	</sql>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.oversky.gurms.dao.server.ServerPlayerActorDao">
    <resultMap id="BaseResultMap" type="org.oversky.gurms.entity.server.ServerPlayerActor">
        <id column="serverid" jdbcType="VARCHAR" property="serverid" />
        <id column="custno" jdbcType="DECIMAL" property="custno" />
        <id column="actorid" jdbcType="VARCHAR" property="actorid" />
        <result column="paid" jdbcType="DECIMAL" property="paid" />
        <result column="rank" jdbcType="INTEGER" property="rank" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="ratiostr" jdbcType="DOUBLE" property="ratiostr" />
        <result column="ratioint" jdbcType="DOUBLE" property="ratioint" />
        <result column="ratiohp" jdbcType="DOUBLE" property="ratiohp" />
        <result column="ratiomp" jdbcType="DOUBLE" property="ratiomp" />
        <result column="ratioagl" jdbcType="DOUBLE" property="ratioagl" />
        <result column="ratioluck" jdbcType="DOUBLE" property="ratioluck" />
    </resultMap>
	
	<sql id="column_list">
        paid, serverid, custno, actorid, rank, level, ratiostr, ratioint, ratiohp, ratiomp, ratioagl, ratioluck
	</sql>
  
    <insert id="insert" parameterType="org.oversky.gurms.entity.server.ServerPlayerActor">
        insert into server_player_actor (paid, serverid, custno, actorid, rank, level, ratiostr, ratioint, ratiohp, ratiomp, ratioagl, ratioluck)
        values (#{paid, jdbcType=DECIMAL}, #{serverid, jdbcType=VARCHAR}, #{custno, jdbcType=DECIMAL}, #{actorid, jdbcType=VARCHAR}, #{rank, jdbcType=INTEGER}, #{level, jdbcType=INTEGER}, #{ratiostr, jdbcType=DOUBLE}, #{ratioint, jdbcType=DOUBLE}, #{ratiohp, jdbcType=DOUBLE}, #{ratiomp, jdbcType=DOUBLE}, #{ratioagl, jdbcType=DOUBLE}, #{ratioluck, jdbcType=DOUBLE})
    </insert>
  
    <select id="selectAll" parameterType="org.oversky.gurms.entity.server.ServerPlayerActor" resultMap="BaseResultMap">
        select <include refid="column_list" />
          from server_player_actor
		<where>
			<if test="paid != null ">
				and paid = #{paid, jdbcType=DECIMAL}
			</if>
			<if test="serverid != null ">
				and serverid = #{serverid, jdbcType=VARCHAR}
			</if>
			<if test="custno != null ">
				and custno = #{custno, jdbcType=DECIMAL}
			</if>
			<if test="actorid != null ">
				and actorid = #{actorid, jdbcType=VARCHAR}
			</if>
			<if test="rank != null ">
				and rank = #{rank, jdbcType=INTEGER}
			</if>
			<if test="level != null ">
				and level = #{level, jdbcType=INTEGER}
			</if>
			<if test="ratiostr != null ">
				and ratiostr = #{ratiostr, jdbcType=DOUBLE}
			</if>
			<if test="ratioint != null ">
				and ratioint = #{ratioint, jdbcType=DOUBLE}
			</if>
			<if test="ratiohp != null ">
				and ratiohp = #{ratiohp, jdbcType=DOUBLE}
			</if>
			<if test="ratiomp != null ">
				and ratiomp = #{ratiomp, jdbcType=DOUBLE}
			</if>
			<if test="ratioagl != null ">
				and ratioagl = #{ratioagl, jdbcType=DOUBLE}
			</if>
			<if test="ratioluck != null ">
				and ratioluck = #{ratioluck, jdbcType=DOUBLE}
			</if>
		</where>
    </select>

	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="false">
		insert all
		<foreach item="item" index="index" collection="list">
		into server_player_actor (paid, serverid, custno, actorid, rank, level, ratiostr, ratioint, ratiohp, ratiomp, ratioagl, ratioluck) 
		values (#{item.paid, jdbcType=DECIMAL}, #{item.serverid, jdbcType=VARCHAR}, #{item.custno, jdbcType=DECIMAL}, #{item.actorid, jdbcType=VARCHAR}, #{item.rank, jdbcType=INTEGER}, #{item.level, jdbcType=INTEGER}, #{item.ratiostr, jdbcType=DOUBLE}, #{item.ratioint, jdbcType=DOUBLE}, #{item.ratiohp, jdbcType=DOUBLE}, #{item.ratiomp, jdbcType=DOUBLE}, #{item.ratioagl, jdbcType=DOUBLE}, #{item.ratioluck, jdbcType=DOUBLE})
		</foreach>
		select 1 from dual
	</insert>
	
    <select id="selectById" resultMap="BaseResultMap">
        select <include refid="column_list" />
          from server_player_actor
         where 1=1 and serverid = #{0} and custno = #{1} and actorid = #{2}
    </select>

    <delete id="deleteById">
        delete from server_player_actor
         where 1=1 and serverid = #{0} and custno = #{1} and actorid = #{2}
    </delete>
  
    <update id="updateById" parameterType="org.oversky.gurms.entity.server.ServerPlayerActor">
        update server_player_actor set 
               paid = #{paid, jdbcType=DECIMAL}, 
               rank = #{rank, jdbcType=INTEGER}, 
               level = #{level, jdbcType=INTEGER}, 
               ratiostr = #{ratiostr, jdbcType=DOUBLE}, 
               ratioint = #{ratioint, jdbcType=DOUBLE}, 
               ratiohp = #{ratiohp, jdbcType=DOUBLE}, 
               ratiomp = #{ratiomp, jdbcType=DOUBLE}, 
               ratioagl = #{ratioagl, jdbcType=DOUBLE}, 
               ratioluck = #{ratioluck, jdbcType=DOUBLE}
         where 1=1 and serverid = #{serverid, jdbcType=VARCHAR} and custno = #{custno, jdbcType=DECIMAL} and actorid = #{actorid, jdbcType=VARCHAR}
    </update>

	<update id="dynamicUpdateById" parameterType="org.oversky.gurms.entity.server.ServerPlayerActor">
		update server_player_actor
		<set>
		    <if test="paid != null">
				paid = #{paid, jdbcType=DECIMAL},
		    </if>
		    <if test="rank != null">
				rank = #{rank, jdbcType=INTEGER},
		    </if>
		    <if test="level != null">
				level = #{level, jdbcType=INTEGER},
		    </if>
		    <if test="ratiostr != null">
				ratiostr = #{ratiostr, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioint != null">
				ratioint = #{ratioint, jdbcType=DOUBLE},
		    </if>
		    <if test="ratiohp != null">
				ratiohp = #{ratiohp, jdbcType=DOUBLE},
		    </if>
		    <if test="ratiomp != null">
				ratiomp = #{ratiomp, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioagl != null">
				ratioagl = #{ratioagl, jdbcType=DOUBLE},
		    </if>
		    <if test="ratioluck != null">
				ratioluck = #{ratioluck, jdbcType=DOUBLE},
		    </if>
		</set>
		where 1=1 and serverid = #{serverid, jdbcType=VARCHAR} and custno = #{custno, jdbcType=DECIMAL} and actorid = #{actorid, jdbcType=VARCHAR}
	</update>
</mapper>